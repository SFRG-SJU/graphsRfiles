library(igraph)
g2<-make_graph(c(1,6,1,2,1,5,1,4,2,3,2,4,2,9,3,8,3,9,4,7,4,8,5,6,5,9,6,7,7,8), directed = FALSE)
l<-matrix(c(3,7.5,7.5,7.25,2,7,6.5,6,0,2.5,6,4.5,8,3,0.5,1,7,0),9,2, byrow = TRUE)
plot.igraph(g2,  layout = l)
#adjacency matrix of g2
A = matrix(c(0,1,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,1,0,0,0,0), 9, 9, byrow = TRUE)
A
ev<-eigen(A)
vectors<-ev$vectors
vectors
v2<-vectors[,2]
v3<-vectors[,3]
j<-cbind(v2,v3)
j
plot.igraph(g2, layout = j)
g1<-make_graph(c(1, 2, 2, 3, 3, 4, 5, 6), directed = FALSE)
#install.packages("igraph")
library(igraph)
g1<-make_graph(c(1, 2, 2, 3, 3, 4, 5, 6), directed = FALSE)
plot(g1)
#install.packages("igraph")
install.packages("rgl")
#first the grid
k<-15
n<-7
gr<- make_lattice( c(k,n) )
#layout_on_grid(db)
tkplot(gr, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#cylinder
ne<-c()
for(i in 1:n){ne<-c(ne,(i-1)*k+1,i*k)}
cy<-add_edges(gr,ne)
tkplot(cy, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#dartboard
cl<-function(v){if(v<= k) {1} else {v}}
vl<-lapply(1:length(V(gr)),cl)
dbtemp<- simplify(contract.vertices(cy, vl), remove.loops=TRUE)
db<-delete_vertices(dbtemp,c(2:k))
tkplot(db, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb<-minimum.spanning.tree(db)
tkplot(tdb, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#randomize labels on the nodes
#run it until you get something satisfactory
db2 <- permute(db, sample(vcount(db)))
tkplot(db2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb2<-minimum.spanning.tree(db2)
tkplot(tdb2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
library(igraph)
#first the grid
k<-15
n<-7
gr<- make_lattice( c(k,n) )
#layout_on_grid(db)
tkplot(gr, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#cylinder
ne<-c()
for(i in 1:n){ne<-c(ne,(i-1)*k+1,i*k)}
cy<-add_edges(gr,ne)
tkplot(cy, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#dartboard
cl<-function(v){if(v<= k) {1} else {v}}
vl<-lapply(1:length(V(gr)),cl)
dbtemp<- simplify(contract.vertices(cy, vl), remove.loops=TRUE)
db<-delete_vertices(dbtemp,c(2:k))
tkplot(db, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb<-minimum.spanning.tree(db)
tkplot(tdb, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tkplot(db2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb2<-minimum.spanning.tree(db2)
tkplot(tdb2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb2<-minimum.spanning.tree(db2)
tkplot(tdb2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb<-minimum.spanning.tree(db)
tkplot(tdb, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tkplot(tdb, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#randomize labels on the nodes
#run it until you get something satisfactory
db2 <- permute(db, sample(vcount(db)))
tkplot(db2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb2<-minimum.spanning.tree(db2)
tkplot(tdb2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
library(igraph)
#first the grid
k<-5
n<-7
gr<- make_lattice( c(k,n+1) )
#layout_on_grid(db)
tkplot(gr, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
for(i in 1:(n+1)){ne<-c(ne,(i-1)*k+1,i*k)}
cy<-add_edges(gr,ne)
tkplot(cy, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
cy<-add_edges(gr,ne)
#cylinder
ne<-c()
for(i in 1:(n+1)){ne<-c(ne,(i-1)*k+1,i*k)}
cy<-add_edges(gr,ne)
tkplot(cy, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#dartboard
cl<-function(v){if(v<= k) {1} else {v}}
vl<-lapply(1:length(V(gr)),cl)
dbtemp<- simplify(contract.vertices(cy, vl), remove.loops=TRUE)
db<-delete_vertices(dbtemp,c(2:k))
tkplot(db, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb<-minimum.spanning.tree(db)
tkplot(tdb, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
#randomize labels on the nodes
#run it until you get something satisfactory
db2 <- permute(db, sample(vcount(db)))
tkplot(db2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
tdb2<-minimum.spanning.tree(db2)
tkplot(tdb2, vertex.shape='circle',
vertex.size=15,
vertex.color='gold')
